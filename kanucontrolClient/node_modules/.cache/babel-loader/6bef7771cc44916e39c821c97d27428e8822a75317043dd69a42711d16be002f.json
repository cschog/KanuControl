{"ast":null,"code":"export const ExtractPerson = (member, personName, personVorname, personGebDat, personSex, personStrasse, personPLZ, personOrt, personTelFestnetz, personTelMobil, personTelEmail, personStatus, personStatusDatum, personBank, personIBAN, personBIC) => {\n  for (const property in member) {\n    switch (String(property)) {\n      case \"Pers_Name\":\n        personName = member[property];\n        break;\n      case \"Pers_Vorname\":\n        personVorname = member[property];\n        break;\n      case \"Pers_GebDat\":\n        personGebDat = member[property];\n        break;\n      case \"Pers_Sex\":\n        personSex = member[property];\n        break;\n      case \"Pers_Strasse\":\n        personStrasse = member[property];\n        break;\n      case \"Pers_PLZ\":\n        personPLZ = member[property];\n        break;\n      case \"Pers_Ort\":\n        personOrt = member[property];\n        break;\n      case \"Pers_TelefonFestnetz\":\n        personTelFestnetz = member[property];\n        break;\n      case \"Pers_TelefonMobil\":\n        personTelMobil = member[property];\n        break;\n      case \"Pers_EMail\":\n        personTelEmail = member[property];\n        break;\n      case \"Pers_Status\":\n        personStatus = member[property];\n        break;\n      case \"Pers_StatusDatum\":\n        personStatusDatum = member[property];\n        break;\n      case \"Pers_Bank\":\n        personBank = member[property];\n        break;\n      case \"Pers_IBAN\":\n        personIBAN = member[property];\n        break;\n      case \"Pers_BIC\":\n        personBIC = member[property];\n        break;\n      default:\n        //console.log(\"Feld nicht zugewiesen\");\n        break;\n    }\n  }\n  return {\n    personName,\n    personVorname,\n    personGebDat,\n    personSex,\n    personStrasse,\n    personPLZ,\n    personOrt,\n    personTelFestnetz,\n    personTelMobil,\n    personTelEmail,\n    personStatus,\n    personStatusDatum,\n    personBank,\n    personIBAN,\n    personBIC\n  };\n};\n_c = ExtractPerson;\nvar _c;\n$RefreshReg$(_c, \"ExtractPerson\");","map":{"version":3,"names":["ExtractPerson","member","personName","personVorname","personGebDat","personSex","personStrasse","personPLZ","personOrt","personTelFestnetz","personTelMobil","personTelEmail","personStatus","personStatusDatum","personBank","personIBAN","personBIC","property","String","_c","$RefreshReg$"],"sources":["/Volumes/Merlin_Daten/Chris_Daten/Projects/Kanu/KC/kanucontrolClient/src/components/Mitglieder/ExtractPerson.js"],"sourcesContent":["\nexport const ExtractPerson = (\n    member,\n    personName,\n    personVorname,\n    personGebDat,\n    personSex,\n    personStrasse,\n    personPLZ,\n    personOrt,\n    personTelFestnetz,\n    personTelMobil,\n    personTelEmail,\n    personStatus,\n    personStatusDatum,\n    personBank,\n    personIBAN,\n    personBIC\n) => {\n  for (const property in member) {\n    switch (String(property)) {\n      case \"Pers_Name\":\n        personName = member[property];\n        break;\n      case \"Pers_Vorname\":\n        personVorname = member[property];\n        break;\n      case \"Pers_GebDat\":\n        personGebDat = member[property];\n        break;\n      case \"Pers_Sex\":\n        personSex = member[property];\n        break;\n      case \"Pers_Strasse\":\n        personStrasse = member[property];\n        break;\n      case \"Pers_PLZ\":\n        personPLZ = member[property];\n        break;\n      case \"Pers_Ort\":\n        personOrt = member[property];\n        break;\n      case \"Pers_TelefonFestnetz\":\n        personTelFestnetz = member[property];\n        break;\n      case \"Pers_TelefonMobil\":\n        personTelMobil = member[property];\n        break;\n      case \"Pers_EMail\":\n        personTelEmail = member[property];\n        break;\n      case \"Pers_Status\":\n        personStatus = member[property];\n        break;\n      case \"Pers_StatusDatum\":\n        personStatusDatum = member[property];\n        break;\n      case \"Pers_Bank\":\n        personBank = member[property];\n        break;\n      case \"Pers_IBAN\":\n        personIBAN = member[property];\n        break;\n      case \"Pers_BIC\":\n        personBIC = member[property];\n        break;\n      default:\n        //console.log(\"Feld nicht zugewiesen\");\n        break;\n    }\n  }\n  return {\n    personName,\n    personVorname,\n    personGebDat,\n    personSex,\n    personStrasse,\n    personPLZ,\n    personOrt,\n    personTelFestnetz,\n    personTelMobil,\n    personTelEmail,\n    personStatus,\n    personStatusDatum,\n    personBank,\n    personIBAN,\n    personBIC,\n  };\n};"],"mappings":"AACA,OAAO,MAAMA,aAAa,GAAGA,CACzBC,MAAM,EACNC,UAAU,EACVC,aAAa,EACbC,YAAY,EACZC,SAAS,EACTC,aAAa,EACbC,SAAS,EACTC,SAAS,EACTC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,YAAY,EACZC,iBAAiB,EACjBC,UAAU,EACVC,UAAU,EACVC,SAAS,KACR;EACH,KAAK,MAAMC,QAAQ,IAAIhB,MAAM,EAAE;IAC7B,QAAQiB,MAAM,CAACD,QAAQ,CAAC;MACtB,KAAK,WAAW;QACdf,UAAU,GAAGD,MAAM,CAACgB,QAAQ,CAAC;QAC7B;MACF,KAAK,cAAc;QACjBd,aAAa,GAAGF,MAAM,CAACgB,QAAQ,CAAC;QAChC;MACF,KAAK,aAAa;QAChBb,YAAY,GAAGH,MAAM,CAACgB,QAAQ,CAAC;QAC/B;MACF,KAAK,UAAU;QACbZ,SAAS,GAAGJ,MAAM,CAACgB,QAAQ,CAAC;QAC5B;MACF,KAAK,cAAc;QACjBX,aAAa,GAAGL,MAAM,CAACgB,QAAQ,CAAC;QAChC;MACF,KAAK,UAAU;QACbV,SAAS,GAAGN,MAAM,CAACgB,QAAQ,CAAC;QAC5B;MACF,KAAK,UAAU;QACbT,SAAS,GAAGP,MAAM,CAACgB,QAAQ,CAAC;QAC5B;MACF,KAAK,sBAAsB;QACzBR,iBAAiB,GAAGR,MAAM,CAACgB,QAAQ,CAAC;QACpC;MACF,KAAK,mBAAmB;QACtBP,cAAc,GAAGT,MAAM,CAACgB,QAAQ,CAAC;QACjC;MACF,KAAK,YAAY;QACfN,cAAc,GAAGV,MAAM,CAACgB,QAAQ,CAAC;QACjC;MACF,KAAK,aAAa;QAChBL,YAAY,GAAGX,MAAM,CAACgB,QAAQ,CAAC;QAC/B;MACF,KAAK,kBAAkB;QACrBJ,iBAAiB,GAAGZ,MAAM,CAACgB,QAAQ,CAAC;QACpC;MACF,KAAK,WAAW;QACdH,UAAU,GAAGb,MAAM,CAACgB,QAAQ,CAAC;QAC7B;MACF,KAAK,WAAW;QACdF,UAAU,GAAGd,MAAM,CAACgB,QAAQ,CAAC;QAC7B;MACF,KAAK,UAAU;QACbD,SAAS,GAAGf,MAAM,CAACgB,QAAQ,CAAC;QAC5B;MACF;QACE;QACA;IAAM;EAEZ;EACA,OAAO;IACLf,UAAU;IACVC,aAAa;IACbC,YAAY;IACZC,SAAS;IACTC,aAAa;IACbC,SAAS;IACTC,SAAS;IACTC,iBAAiB;IACjBC,cAAc;IACdC,cAAc;IACdC,YAAY;IACZC,iBAAiB;IACjBC,UAAU;IACVC,UAAU;IACVC;EACF,CAAC;AACH,CAAC;AAACG,EAAA,GAvFWnB,aAAa;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}