{"ast":null,"code":"var _jsxFileName = \"/Volumes/Merlin_Daten/Chris_Daten/Projects/Kanu/KC/kanucontrolClient/src/components/Vereine/VereinEditForm.js\",\n  _s = $RefreshSig$();\nimport { BtnStoreCancel } from \"./../../services/BtnStoreCancel\";\nimport { FormFeld } from \"../../services/FormFeld\";\nimport React, { useState, useRef, useCallback } from \"react\";\nimport { Toast } from \"primereact/toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function VereinEditForm(_ref) {\n  _s();\n  let {\n    modusNeuerVerein,\n    onSpeichern,\n    onAbbruch,\n    verein\n  } = _ref;\n  const toast = useRef(null);\n  const club = verein[0];\n  const createUpdateVerein = useCallback(() => {\n    if (vereinsName.length === 0 || vereinsKurz.length === 0) {\n      toast.current.show({\n        severity: \"warn\",\n        summary: \"Achtung\",\n        detail: \"mindestens Vereinsname und Kurzbezeichnung m端ssen eingegeben werden!\",\n        life: 3000\n      });\n    } else {\n      const neuerVerein = {\n        Verein_Name: vereinsName,\n        Verein_Kurz: vereinsKurz,\n        Verein_Strasse: vereinsStrasse,\n        Verein_PLZ: vereinsPLZ,\n        Verein_Ort: vereinsOrt,\n        Verein_TelP: vereinsTelefon,\n        Verein_Bankname: vereinsBank,\n        Verein_KontoInhaber: vereinsKontoInhaber,\n        Verein_KI_Anschrift: vereinsKontoInhaberAdresse,\n        Verein_IBAN: vereinsIBAN,\n        Verein_BIC: vereinsBIC\n      };\n      onSpeichern(neuerVerein);\n    }\n  });\n  let vereinsNameTemp = \"\";\n  let vereinsKurzTemp = \"\";\n  let vereinsStrasseTemp = \"\";\n  let vereinsPLZTemp = \"\";\n  let vereinsOrtTemp = \"\";\n  let vereinsTelefonTemp = \"\";\n  let vereinsBankTemp = \"\";\n  let vereinsKontoInhaberTemp = \"\";\n  let vereinsKontoInhaberAdresseTemp = \"\";\n  let vereinsIBANTemp = \"\";\n  let vereinsBICTemp = \"\";\n  if (!modusNeuerVerein) {\n    extractVerein2();\n  }\n  const [vereinsName, setVereinsName] = useState(vereinsNameTemp);\n  const [vereinsKurz, setVereinsKurz] = useState(vereinsKurzTemp);\n  const [vereinsStrasse, setVereinsStrasse] = useState(vereinsStrasseTemp);\n  const [vereinsPLZ, setVereinsPLZ] = useState(vereinsPLZTemp);\n  const [vereinsOrt, setVereinsOrt] = useState(vereinsOrtTemp);\n  const [vereinsTelefon, setVereinsTelefon] = useState(vereinsTelefonTemp);\n  const [vereinsBank, setVereinsBank] = useState(vereinsBankTemp);\n  const [vereinsKontoInhaber, setVereinsKontoInhaber] = useState(vereinsKontoInhaberTemp);\n  const [vereinsKontoInhaberAdresse, setVereinsKontoInhaberAdresse] = useState(vereinsKontoInhaberAdresseTemp);\n  const [vereinsIBAN, setVereinsIBAN] = useState(vereinsIBANTemp);\n  const [vereinsBIC, setVereinsBIC] = useState(vereinsBICTemp);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid m-auto w-11\",\n      children: [FormFeld(vereinsName, \"Vereinsname\", false, setVereinsName), FormFeld(vereinsKurz, \"Abk端rzung\", false, setVereinsKurz), FormFeld(vereinsStrasse, \"Strasse\", false, setVereinsStrasse), FormFeld(vereinsPLZ, \"PLZ\", false, setVereinsPLZ), FormFeld(vereinsOrt, \"Ort\", false, setVereinsOrt), FormFeld(vereinsTelefon, \"Telefon\", false, setVereinsTelefon), FormFeld(vereinsBank, \"Bank\", false, setVereinsBank), FormFeld(vereinsKontoInhaber, \"Kontoinhaber\", false, setVereinsKontoInhaber), FormFeld(vereinsKontoInhaberAdresse, \"Kontoinhaber Adresse\", false, setVereinsKontoInhaberAdresse), FormFeld(vereinsIBAN, \"IBAN\", false, setVereinsIBAN), FormFeld(vereinsBIC, \"BIC\", false, setVereinsBIC)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BtnStoreCancel, {\n      createUpdate: createUpdateVerein,\n      onAbbruch: onAbbruch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  function extractVerein2() {\n    for (const property in club) {\n      switch (String(property)) {\n        case \"Verein_Name\":\n          vereinsNameTemp = club[property];\n          break;\n        case \"Verein_Kurz\":\n          vereinsKurzTemp = club[property];\n          break;\n        case \"Verein_Strasse\":\n          vereinsStrasseTemp = club[property];\n          break;\n        case \"Verein_PLZ\":\n          vereinsPLZTemp = club[property];\n          break;\n        case \"Verein_Ort\":\n          vereinsOrtTemp = club[property];\n          break;\n        case \"Verein_TelP\":\n          vereinsTelefonTemp = club[property];\n          break;\n        case \"Verein_Bankname\":\n          vereinsBankTemp = club[property];\n          break;\n        case \"Verein_KontoInhaber\":\n          vereinsKontoInhaberTemp = club[property];\n          break;\n        case \"Verein_KI_Anschrift\":\n          vereinsKontoInhaberAdresseTemp = club[property];\n          break;\n        case \"Verein_IBAN\":\n          vereinsIBANTemp = club[property];\n          break;\n        case \"Verein_BIC\":\n          vereinsBICTemp = club[property];\n          break;\n        default:\n          //console.log(\"Feld nicht zugewiesen\");\n          break;\n      }\n    }\n  }\n}\n_s(VereinEditForm, \"SsFSmkvOTH585PTgwjK1tjDWZ8Q=\");\n_c = VereinEditForm;\nvar _c;\n$RefreshReg$(_c, \"VereinEditForm\");","map":{"version":3,"names":["BtnStoreCancel","FormFeld","React","useState","useRef","useCallback","Toast","jsxDEV","_jsxDEV","Fragment","_Fragment","VereinEditForm","_ref","_s","modusNeuerVerein","onSpeichern","onAbbruch","verein","toast","club","createUpdateVerein","vereinsName","length","vereinsKurz","current","show","severity","summary","detail","life","neuerVerein","Verein_Name","Verein_Kurz","Verein_Strasse","vereinsStrasse","Verein_PLZ","vereinsPLZ","Verein_Ort","vereinsOrt","Verein_TelP","vereinsTelefon","Verein_Bankname","vereinsBank","Verein_KontoInhaber","vereinsKontoInhaber","Verein_KI_Anschrift","vereinsKontoInhaberAdresse","Verein_IBAN","vereinsIBAN","Verein_BIC","vereinsBIC","vereinsNameTemp","vereinsKurzTemp","vereinsStrasseTemp","vereinsPLZTemp","vereinsOrtTemp","vereinsTelefonTemp","vereinsBankTemp","vereinsKontoInhaberTemp","vereinsKontoInhaberAdresseTemp","vereinsIBANTemp","vereinsBICTemp","extractVerein2","setVereinsName","setVereinsKurz","setVereinsStrasse","setVereinsPLZ","setVereinsOrt","setVereinsTelefon","setVereinsBank","setVereinsKontoInhaber","setVereinsKontoInhaberAdresse","setVereinsIBAN","setVereinsBIC","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","className","createUpdate","property","String","_c","$RefreshReg$"],"sources":["/Volumes/Merlin_Daten/Chris_Daten/Projects/Kanu/KC/kanucontrolClient/src/components/Vereine/VereinEditForm.js"],"sourcesContent":["import { BtnStoreCancel } from \"./../../services/BtnStoreCancel\";\nimport { FormFeld } from \"../../services/FormFeld\";\n\nimport React, { useState, useRef, useCallback } from \"react\";\n\nimport { Toast } from \"primereact/toast\";\n\nexport function VereinEditForm({\n  modusNeuerVerein,\n  onSpeichern,\n  onAbbruch,\n  verein,\n}) {\n  const toast = useRef(null);\n\n  const club = verein[0];\n\n  const createUpdateVerein = useCallback(() => {\n    if (vereinsName.length === 0 || vereinsKurz.length === 0) {\n      toast.current.show({\n        severity: \"warn\",\n        summary: \"Achtung\",\n        detail:\n          \"mindestens Vereinsname und Kurzbezeichnung m端ssen eingegeben werden!\",\n        life: 3000,\n      });\n    } else {\n      const neuerVerein = {\n        Verein_Name: vereinsName,\n        Verein_Kurz: vereinsKurz,\n        Verein_Strasse: vereinsStrasse,\n        Verein_PLZ: vereinsPLZ,\n        Verein_Ort: vereinsOrt,\n        Verein_TelP: vereinsTelefon,\n        Verein_Bankname: vereinsBank,\n        Verein_KontoInhaber: vereinsKontoInhaber,\n        Verein_KI_Anschrift: vereinsKontoInhaberAdresse,\n        Verein_IBAN: vereinsIBAN,\n        Verein_BIC: vereinsBIC,\n      };\n      onSpeichern(neuerVerein);\n    }\n  });\n\n  let vereinsNameTemp = \"\";\n  let vereinsKurzTemp = \"\";\n  let vereinsStrasseTemp = \"\";\n  let vereinsPLZTemp = \"\";\n  let vereinsOrtTemp = \"\";\n  let vereinsTelefonTemp = \"\";\n  let vereinsBankTemp = \"\";\n  let vereinsKontoInhaberTemp = \"\";\n  let vereinsKontoInhaberAdresseTemp = \"\";\n  let vereinsIBANTemp = \"\";\n  let vereinsBICTemp = \"\";\n\n  if (!modusNeuerVerein) {\n    extractVerein2();\n  }\n\n  const [vereinsName, setVereinsName] = useState(vereinsNameTemp);\n  const [vereinsKurz, setVereinsKurz] = useState(vereinsKurzTemp);\n  const [vereinsStrasse, setVereinsStrasse] = useState(vereinsStrasseTemp);\n  const [vereinsPLZ, setVereinsPLZ] = useState(vereinsPLZTemp);\n  const [vereinsOrt, setVereinsOrt] = useState(vereinsOrtTemp);\n  const [vereinsTelefon, setVereinsTelefon] = useState(vereinsTelefonTemp);\n  const [vereinsBank, setVereinsBank] = useState(vereinsBankTemp);\n  const [vereinsKontoInhaber, setVereinsKontoInhaber] = useState(\n    vereinsKontoInhaberTemp\n  );\n  const [vereinsKontoInhaberAdresse, setVereinsKontoInhaberAdresse] = useState(\n    vereinsKontoInhaberAdresseTemp\n  );\n  const [vereinsIBAN, setVereinsIBAN] = useState(vereinsIBANTemp);\n  const [vereinsBIC, setVereinsBIC] = useState(vereinsBICTemp);\n\n  return (\n    <>\n      <Toast ref={toast} />\n      <div className=\"grid m-auto w-11\">\n        {FormFeld(vereinsName, \"Vereinsname\", false, setVereinsName)}\n        {FormFeld(vereinsKurz, \"Abk端rzung\", false, setVereinsKurz)}\n        {FormFeld(vereinsStrasse, \"Strasse\", false, setVereinsStrasse)}\n        {FormFeld(vereinsPLZ, \"PLZ\", false, setVereinsPLZ)}\n        {FormFeld(vereinsOrt, \"Ort\", false, setVereinsOrt)}\n        {FormFeld(vereinsTelefon, \"Telefon\", false, setVereinsTelefon)}\n        {FormFeld(vereinsBank, \"Bank\", false, setVereinsBank)}\n        {FormFeld(\n          vereinsKontoInhaber,\n          \"Kontoinhaber\",\n          false,\n          setVereinsKontoInhaber\n        )}\n        {FormFeld(\n          vereinsKontoInhaberAdresse,\n          \"Kontoinhaber Adresse\",\n          false,\n          setVereinsKontoInhaberAdresse\n        )}\n        {FormFeld(vereinsIBAN, \"IBAN\", false, setVereinsIBAN)}\n        {FormFeld(vereinsBIC, \"BIC\", false, setVereinsBIC)}\n      </div>\n      <BtnStoreCancel\n        createUpdate={createUpdateVerein}\n        onAbbruch={onAbbruch}\n      />\n    </>\n  );\n\n  function extractVerein2() {\n    for (const property in club) {\n      switch (String(property)) {\n        case \"Verein_Name\":\n          vereinsNameTemp = club[property];\n          break;\n        case \"Verein_Kurz\":\n          vereinsKurzTemp = club[property];\n          break;\n        case \"Verein_Strasse\":\n          vereinsStrasseTemp = club[property];\n          break;\n        case \"Verein_PLZ\":\n          vereinsPLZTemp = club[property];\n          break;\n        case \"Verein_Ort\":\n          vereinsOrtTemp = club[property];\n          break;\n        case \"Verein_TelP\":\n          vereinsTelefonTemp = club[property];\n          break;\n        case \"Verein_Bankname\":\n          vereinsBankTemp = club[property];\n          break;\n        case \"Verein_KontoInhaber\":\n          vereinsKontoInhaberTemp = club[property];\n          break;\n        case \"Verein_KI_Anschrift\":\n          vereinsKontoInhaberAdresseTemp = club[property];\n          break;\n        case \"Verein_IBAN\":\n          vereinsIBANTemp = club[property];\n          break;\n        case \"Verein_BIC\":\n          vereinsBICTemp = club[property];\n          break;\n        default:\n          //console.log(\"Feld nicht zugewiesen\");\n          break;\n      }\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}