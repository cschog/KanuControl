{"ast":null,"code":"import _slicedToArray from \"/Volumes/Merlin_Daten/Chris_Daten/Projects/Kanu/KanuControl/kanucontrolClient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Volumes/Merlin_Daten/Chris_Daten/Projects/Kanu/KanuControl/kanucontrolClient/src/components/Mitglieder/MitgliederEditForm.tsx\";\nimport React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport { Toast } from \"primereact/toast\";\nimport { BtnStoreCancel } from \"../../services/BtnStoreCancel\";\nimport { FormFeld } from \"../../services/FormFeld\";\nexport function MitgliederEditForm(_ref) {\n  var onSpeichern = _ref.onSpeichern,\n    onAbbruch = _ref.onAbbruch,\n    verein = _ref.verein;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setMitgliederName = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    abk = _useState4[0],\n    setMitgliederVorname = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    strasse = _useState6[0],\n    setMitgliederStrasse = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    plz = _useState8[0],\n    setMitgliederPLZ = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    ort = _useState10[0],\n    setMitgliederOrt = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    telefon = _useState12[0],\n    setMitgliederTelefon = _useState12[1];\n  var _useState13 = useState(\"\"),\n    _useState14 = _slicedToArray(_useState13, 2),\n    bankName = _useState14[0],\n    setMitgliederBankName = _useState14[1];\n  var _useState15 = useState(\"\"),\n    _useState16 = _slicedToArray(_useState15, 2),\n    iban = _useState16[0],\n    setMitgliederIBAN = _useState16[1];\n  var _useState17 = useState(\"\"),\n    _useState18 = _slicedToArray(_useState17, 2),\n    bic = _useState18[0],\n    setMitgliederBIC = _useState18[1];\n  var toast = useRef(null);\n  var createUpdateMitglied = useCallback(function () {\n    // If mitglied exists, it´s an update, so include the \"id\" property\n    if (mitglied) {\n      var updatedVerein = {\n        id: person.id,\n        // Include the id\n        name: name,\n        abk: abk,\n        strasse: strasse,\n        plz: plz,\n        ort: ort,\n        telefon: telefon,\n        bankName: bankName,\n        iban: iban,\n        bic: bic\n      };\n      onSpeichern(updatedVerein);\n    } else {\n      // If verein doesn't exist, it's a new entry, you might handle this case differently\n      // For example, create a new instance or show an error//\n    }\n  }, [name, abk, strasse, plz, ort, telefon, bankName, iban, bic, onSpeichern]);\n  useEffect(function () {\n    if (mitglied) {\n      setMitgliederName(verein.name);\n      setMitgliederKurz(verein.abk);\n      setMitgliederStrasse(verein.strasse);\n      setMitgliederPLZ(verein.plz);\n      setMitgliederOrt(verein.ort);\n      setMitgliederTelefon(verein.telefon);\n      setMitgliederBankName(verein.bankName);\n      setMitgliederKontoInhaber(verein.kontoInhaber);\n      setMitgliederKIAnschrift(verein.kiAnschrift);\n      setMitgliederIBAN(verein.iban);\n      setMitgliederBIC(verein.bic);\n    }\n  }, [verein]);\n  var handleCreateUpdateVerein = function handleCreateUpdateVerein() {\n    createUpdateMitglied();\n    return false; // Placeholder value indicating that the update was not successful\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Toast, {\n    ref: toast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid m-auto w-11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, FormFeld(abk, \"Vorname\", false, setMitgliederVorname), FormFeld(name, \"Name\", false, setMitgliederName), FormFeld(strasse, \"Strasse\", false, setMitgliederStrasse), FormFeld(plz, \"PLZ\", false, setMitgliederPLZ), FormFeld(ort, \"Ort\", false, setMitgliederOrt), FormFeld(telefon, \"Telefon\", false, setMitgliederTelefon), FormFeld(bankName, \"Bank\", false, setMitgliederBankName), FormFeld(iban, \"IBAN\", false, setMitgliederIBAN), FormFeld(bic, \"BIC\", false, setMitgliederBIC)), /*#__PURE__*/React.createElement(BtnStoreCancel, {\n    createUpdate: handleCreateUpdateVerein,\n    onAbbruch: onAbbruch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","Toast","BtnStoreCancel","FormFeld","MitgliederEditForm","_ref","onSpeichern","onAbbruch","verein","_useState","_useState2","_slicedToArray","name","setMitgliederName","_useState3","_useState4","abk","setMitgliederVorname","_useState5","_useState6","strasse","setMitgliederStrasse","_useState7","_useState8","plz","setMitgliederPLZ","_useState9","_useState10","ort","setMitgliederOrt","_useState11","_useState12","telefon","setMitgliederTelefon","_useState13","_useState14","bankName","setMitgliederBankName","_useState15","_useState16","iban","setMitgliederIBAN","_useState17","_useState18","bic","setMitgliederBIC","toast","createUpdateMitglied","mitglied","updatedVerein","id","person","setMitgliederKurz","setMitgliederKontoInhaber","kontoInhaber","setMitgliederKIAnschrift","kiAnschrift","handleCreateUpdateVerein","createElement","Fragment","ref","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","createUpdate"],"sources":["/Volumes/Merlin_Daten/Chris_Daten/Projects/Kanu/KanuControl/kanucontrolClient/src/components/Mitglieder/MitgliederEditForm.tsx"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport { Toast } from \"primereact/toast\";\nimport { BtnStoreCancel } from \"../../services/BtnStoreCancel\";\nimport { FormFeld } from \"../../services/FormFeld\";\nimport { Person } from \"../interfaces/Person\";\n\ninterface MitgliederEditFormProps {\n  onSpeichern: (mitglied: Person) => void;\n  onAbbruch: () => void;\n  mitglied?: Person;\n}\n\nexport function MitgliederEditForm({\n  onSpeichern,\n  onAbbruch,\n  verein,\n}: MitgliederEditFormProps) {\n  const [name, setMitgliederName] = useState(\"\");\n  const [abk, setMitgliederVorname] = useState(\"\");\n  const [strasse, setMitgliederStrasse] = useState(\"\");\n  const [plz, setMitgliederPLZ] = useState(\"\");\n  const [ort, setMitgliederOrt] = useState(\"\");\n  const [telefon, setMitgliederTelefon] = useState(\"\");\n  const [bankName, setMitgliederBankName] = useState(\"\");\n\n  const [iban, setMitgliederIBAN] = useState(\"\");\n  const [bic, setMitgliederBIC] = useState(\"\");\n  const toast = useRef<Toast | null>(null);\n\n\n  const createUpdateMitglied = useCallback(() => {\n    // If mitglied exists, it´s an update, so include the \"id\" property\n    if (mitglied) {\n      const updatedVerein: Mitglied = {\n        id: person.id, // Include the id\n        name,\n        abk,\n        strasse,\n        plz,\n        ort,\n        telefon,\n        bankName,\n        iban,\n        bic,\n      };\n      onSpeichern(updatedVerein);\n    } else {\n      // If verein doesn't exist, it's a new entry, you might handle this case differently\n      // For example, create a new instance or show an error//\n    }\n  }, [\n    name,\n    abk,\n    strasse,\n    plz,\n    ort,\n    telefon,\n    bankName,\n    iban,\n    bic,\n    onSpeichern,\n  ]);\n\n  useEffect(() => {\n    if (mitglied) {\n      setMitgliederName(verein.name);\n      setMitgliederKurz(verein.abk);\n      setMitgliederStrasse(verein.strasse);\n      setMitgliederPLZ(verein.plz);\n      setMitgliederOrt(verein.ort);\n      setMitgliederTelefon(verein.telefon);\n      setMitgliederBankName(verein.bankName);\n      setMitgliederKontoInhaber(verein.kontoInhaber);\n      setMitgliederKIAnschrift(verein.kiAnschrift);\n      setMitgliederIBAN(verein.iban);\n      setMitgliederBIC(verein.bic);\n    }\n  }, [verein]);\n\n  const handleCreateUpdateVerein = () => {\n    createUpdateMitglied();\n    return false; // Placeholder value indicating that the update was not successful\n  };\n\n  return (\n    <>\n      <Toast ref={toast} />\n      <div className=\"grid m-auto w-11\">\n        {FormFeld(abk, \"Vorname\", false, setMitgliederVorname)}\n        {FormFeld(name, \"Name\", false, setMitgliederName)}\n        {FormFeld(strasse, \"Strasse\", false, setMitgliederStrasse)}\n        {FormFeld(plz, \"PLZ\", false, setMitgliederPLZ)}\n        {FormFeld(ort, \"Ort\", false, setMitgliederOrt)}\n        {FormFeld(telefon, \"Telefon\", false, setMitgliederTelefon)}\n        {FormFeld(bankName, \"Bank\", false, setMitgliederBankName)}\n        \n      \n        {FormFeld(iban, \"IBAN\", false, setMitgliederIBAN)}\n        {FormFeld(bic, \"BIC\", false, setMitgliederBIC)}\n      </div>\n      <BtnStoreCancel\n        createUpdate={handleCreateUpdateVerein}\n        onAbbruch={onAbbruch}\n      />\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}