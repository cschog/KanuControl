LetÂ´s start a new test approach. I have a running keycloak in a docker container on port 9080. The realm is "KanuControl" and the configuration is stored on my disk. This is the keycloak startup. 

docker run -d --name keycloak \
  -p 9080:8080 \
  -e KEYCLOAK_ADMIN=admin \
  -e KEYCLOAK_ADMIN_PASSWORD=admin \
  -v /Volumes/Merlin_Daten/Apps/keyCloak-Data:/opt/keycloak/data \
  quay.io/keycloak/keycloak:24.0.2 start-dev
  
  In the realm "KanuControl" i have defined 2 clients
  
  1. kc_client for the frontend
  2. kc_seerver for the backend.
  
  kc_server:
  - Root url: http://localhost:8090
  - Valid redirect URIs: http://localhost:8090/*
  - Web origins: +
  - Admin URL: http://localhost:8090
  
  - Client secret: OkEJPqHgEPuCz3rSpCsw3R3xHx00aV1W
  
  - Authentication flow: 
  		- Standard flow
  		- Direct access grants
  		- OAuth 2.0 Device Authorization Grant
  		
  - Front channel logout: on
  - Backchannel logout session required: on
  
  Groups: 
  - EKC-EschweilerKanuClub
  - OKC-OberhausenerKanuClub
  - SVBT-SpielvereinigungBoichThum
  
  User: cschog / EKC-EschweilerKanuClub
  
  The data are stored in mySQL
    datasource:
    url: jdbc:mysql://localhost:3306/kanu?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: root
    password: CHsab581_mysql
    driver-class-name: com.mysql.cj.jdbc.Driver
    
for creation and management of the database schema is liquibase used.
  
  I want to test kcserver (=springboot app) with keycloak if this is possible without the running REACT frontend. The test should use the real mySQL database. In the test the login and the selection of the correct database/schema should be used. If the database is not there it should be created.
